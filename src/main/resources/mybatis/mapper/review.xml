<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.tp.yogioteur.mapper.ReviewMapper">

	<!-- 리뷰 갯수 -->
	<select id="selectReviewCount" resultType="Integer">
		SELECT COUNT(REVIEW_NO)
		  FROM REVIEW
	</select>
	
	<!-- 리뷰 목록보기 -->
	<select id="selectReviewList" parameterType="Map" resultType="ReviewDTO">
		SELECT  REVIEW_NO, MEMBER_ID, RT_TYPE, ROOM_NAME, REVIEW_TITLE, REVIEW_CONTENT, REVIEW_CREATED,REVIEW_MODIFIED, REVIEW_REV_NO
		  FROM REVIEW
		  ORDER BY REVIEW_NO DESC
		 LIMIT #{beginRecord}, #{recordPerPage}
		  
	</select>
	
	<!-- 리뷰하나사진 여ㄹ개 보기 -->
	<select id="selectReImage" parameterType="Long" resultType="ReImageDTO">
		SELECT RE_IMAGE_NO, REVIEW_NO, RE_IMAGE_PATH, RE_IMAGE_SAVED, RE_IMAGE_ORIGIN
		  FROM RE_IMAGE
		 WHERE REVIEW_NO = #{reviewNo}
	</select>

	<!-- 리뷰 하나 정보 -->
	<select id="selectReviewByNo" parameterType="Long" resultType="ReviewDTO">
		SELECT REVIEW_NO, MEMBER_ID, RT_TYPE, ROOM_NAME, REVIEW_TITLE, REVIEW_CONTENT, REVIEW_CREATED,REVIEW_MODIFIED, REVIEW_REV_NO
		  FROM REVIEW
		 WHERE REVIEW_NO = #{reviewNo}
	</select>
	

	<!-- 리뷰 추가 -->
	<insert id="insertReview" parameterType="ReviewDTO">
		<selectKey keyProperty="reviewNo" resultType="Long" order="AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey>
		INSERT INTO REVIEW
			(REVIEW_NO, MEMBER_ID, RT_TYPE, ROOM_NAME, REVIEW_TITLE, REVIEW_CONTENT, REVIEW_CREATED, REVIEW_MODIFIED, REVIEW_REV_NO)
		VALUES
			(#{reviewNo}, #{memberId}, #{rtType},#{roomName}, #{reviewTitle}, #{reviewContent}, NOW(), NOW(), #{reviewRevNo})
	</insert>
	
	<!-- 리뷰 이미지 저장 -->
	<insert id="insertReImage" parameterType="ReImageDTO">
		INSERT INTO RE_IMAGE
			(REVIEW_NO, RE_IMAGE_PATH, RE_IMAGE_SAVED, RE_IMAGE_ORIGIN)
		VALUES
			(#{reviewNo}, #{reImagePath}, #{reImageSaved}, #{reImageOrigin})
	</insert>
	
	<!-- 리뷰 삭제 -->
	<delete id="deleteReview" parameterType="Long">
		DELETE
		  FROM REVIEW
		 WHERE REVIEW_NO = #{reviewNo}
	</delete>
	
	<!-- 리뷰를 삭제 했을때 reviewNo image 전체 삭제 -->
	<delete id="deleteReImageByReviewNo" parameterType="Long">
		DELETE
		  FROM RE_IMAGE
		 WHERE REVIEW_NO = #{reviewNo}
	</delete>
	
	<!-- 첨부파일 삭제 -->
	<delete id="deleteReImage" parameterType="Long">
		DELETE
		  FROM RE_IMAGE
		 WHERE RE_IMAGE_NO = #{reImageNo}
	</delete>
	
	<!-- 첨부 파일 정보 -->
	<select id="selectReImageByNo" parameterType="Long" resultType="ReImageDTO">
		SELECT RE_IMAGE_NO, REVIEW_NO, RE_IMAGE_PATH, RE_IMAGE_SAVED, RE_IMAGE_ORIGIN
		  FROM RE_IMAGE
		 WHERE RE_IMAGE_NO = #{reImageNo}
	</select>
	
	<!-- 전체 이미지 -->
	<select id="selectReImageList" resultType="ReImageDTO">
		SELECT RE_IMAGE_NO, REVIEW_NO, RE_IMAGE_PATH, RE_IMAGE_SAVED, RE_IMAGE_ORIGIN
		  FROM RE_IMAGE
	</select>
	
	<!-- 리뷰 수정 -->
	<update id="updateReview" parameterType="ReviewDTO">
		UPDATE REVIEW
		   SET REVIEW_TITLE = #{reviewTitle}, REVIEW_CONTENT = #{reviewContent} , REVIEW_MODIFIED = NOW() ,REVIEW_REV_NO=#{reviewRevNo}
		 WHERE REVIEW_NO = #{reviewNo}
	</update>
	
</mapper>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.tp.yogioteur.mapper.MemberMapper">
	<!-- 회원가입 --> 
	<select id="selectMemberById" parameterType="String" resultType="MemberDTO">
	SELECT MEMBER_NO, MEMBER_ID, MEMBER_PW, MEMBER_EMAIL, MEMBER_NAME, MEMBER_PHONE, MEMBER_BIRTH, MEMBER_GENDER, MEMBER_PROMO_ADD, MEMBER_POST_CODE, MEMBER_ROAD_ADDR, AGREE_STATE, SIGN_IN, MEMBER_SESSIONID
		  FROM MEMBER
	 WHERE MEMBER_ID = #{memberId}	
	</select>
	
	<select id="selectMemberByEmail" parameterType="String" resultType="MemberDTO">
	SELECT MEMBER_NO, MEMBER_ID, MEMBER_PW, MEMBER_EMAIL, MEMBER_NAME, MEMBER_PHONE, MEMBER_BIRTH, MEMBER_GENDER, MEMBER_PROMO_ADD, MEMBER_POST_CODE, MEMBER_ROAD_ADDR, AGREE_STATE, SIGN_IN, MEMBER_SESSIONID
		  FROM MEMBER
	 WHERE MEMBER_EMAIL = #{memberEmail}	
	</select>
	
	<insert id="insertMember" parameterType="MemberDTO">
	INSERT INTO MEMBER
			(MEMBER_NO, MEMBER_ID, MEMBER_PW, MEMBER_EMAIL, MEMBER_NAME, MEMBER_PHONE, MEMBER_BIRTH, MEMBER_GENDER, MEMBER_PROMO_ADD, MEMBER_POST_CODE, MEMBER_ROAD_ADDR, AGREE_STATE, SIGN_IN)
		VALUES
			(MEMBER_SEQ.NEXTVAL, #{memberId}, #{memberPw}, #{memberEmail}, #{memberName}, #{memberPhone}, #{memberBirth}, #{memberGender}, #{memberPromoAdd}, #{memberPostCode}, #{memberRoadAddr}, #{agreeState}, SYSDATE)
	</insert>
	
	
	
	<!-- 로그인 / 비밀번호 검증 -->
	<select id="selectMemberByIdPw" parameterType="MemberDTO" resultType="MemberDTO">
	SELECT MEMBER_NO, MEMBER_ID, MEMBER_PW, MEMBER_EMAIL, MEMBER_NAME, MEMBER_PHONE, MEMBER_BIRTH, MEMBER_GENDER, MEMBER_PROMO_ADD, MEMBER_POST_CODE, MEMBER_ROAD_ADDR, AGREE_STATE, SIGN_IN, MEMBER_SESSIONID
		FROM MEMBER
	 WHERE MEMBER_ID = #{memberId}
	 	AND MEMBER_PW = #{memberPw}
	</select>
	
	<insert id="insertMemberLog" parameterType="String">
	INSERT INTO MEMBER_LOG
		(MEMBER_LOG_NO, MEMBER_ID, SIGN_UP)
	 VALUES
	 	(MEMBER_LOG_SEQ.NEXTVAL, #{memberId}, TO_DATE(SYSDATE, 'yyyy-mm-dd'))
	</insert>
	

	
	<!-- 아이디찾기 -->
	<select id="findMemberByNameEmail" parameterType="MemberDTO" resultType="MemberDTO">
	SELECT MEMBER_NO, MEMBER_ID, MEMBER_PW, MEMBER_EMAIL, MEMBER_NAME, MEMBER_PHONE, MEMBER_BIRTH, MEMBER_GENDER, MEMBER_PROMO_ADD, MEMBER_POST_CODE, MEMBER_ROAD_ADDR, AGREE_STATE, SIGN_IN, MEMBER_SESSIONID
		  FROM MEMBER
	  WHERE MEMBER_NAME = #{memberName}	
	   AND MEMBER_EMAIL = #{memberEmail}
	</select>
	
	
	<!-- 비밀번호 -->
	<select id="selectMemberByIdEmail" parameterType="MemberDTO" resultType="MemberDTO">
	SELECT MEMBER_NO, MEMBER_ID, MEMBER_PW, MEMBER_EMAIL, MEMBER_NAME, MEMBER_PHONE, MEMBER_BIRTH, MEMBER_GENDER, MEMBER_PROMO_ADD, MEMBER_POST_CODE, MEMBER_ROAD_ADDR, AGREE_STATE, SIGN_IN, MEMBER_SESSIONID
	  FROM MEMBER
	 WHERE MEMBER_ID = #{memberId}
	   AND MEMBER_EMAIL = #{memberEmail}
	</select>
	
	<!-- 비번 수정 -->
	<update id="updatePw" parameterType="MemberDTO">
	UPDATE MEMBER
	   SET MEMBER_PW = #{memberPw}
	 WHERE MEMBER_ID = #{memberId}
	</update>
	
	
	<!-- 회원정보 수정 -->
	<update id="updateMember" parameterType="MemberDTO">
	UPDATE MEMBER
	   SET MEMBER_PHONE = #{memberPhone}
	    , MEMBER_POST_CODE = #{memberPostCode}
	    , MEMBER_ROAD_ADDR = #{memberRoadAddr}
	    , MEMBER_GENDER = #{memberGender}
	    , MEMBER_EMAIL = #{memberEmail}
	    , MEMBER_PROMO_ADD = #{memberPromoAdd}
	 WHERE MEMBER_ID = #{memberId}
	</update>
	

	

	<!-- 탈퇴 -->	
	<delete id="removeMember" parameterType="String">
	DELETE 
		FROM MEMBER
	 WHERE MEMBER_ID = #{memberId}
	</delete>
	
	<!-- 탈퇴확인 -->
	<select id="selectSignOutMemberByMemberId" parameterType="String" resultType="SignOutMemberDTO">
	SELECT SIGN_OUT_NO, MEMBER_NO, ID, NAME, EMAIL, AGREE_STATE, SIGN_IN, SIGN_OUT
		FROM SIGN_OUT_MEMBER
	 WHERE ID = #{id}
	</select>
	
	<!-- 탈퇴한 회원 명단에서 제거 -->
	<delete id="removeSignOutMember" parameterType="String">
		DELETE
		  FROM SIGN_OUT_MEMBER
		 WHERE ID = #{id}
	</delete>
	

	
</mapper>